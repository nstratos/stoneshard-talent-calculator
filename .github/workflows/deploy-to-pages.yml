# Simple workflow for deploying static content to GitHub Pages
name: Deploy Live

on:
  # Deploy when pushing a tag
  push:
    tags:
      - 'v*.*.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all tags
      - name: Get latest Git tag version
        run: echo "VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo 'v0.0.0')" >> $GITHUB_ENV
      - name: Embed version
        run: |
          echo "export const APP_VERSION = '${{ env.VERSION }}';" > version.js
          echo "export const APP_URL = 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/';" >> version.js
          echo "export const REPO_URL = 'https://github.com/${{ github.repository }}';" >> version.js
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
